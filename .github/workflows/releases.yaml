name: Create GitHub Release

# release a new version by pushing to the release branch
on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based Macs
            args: ""
          - platform: "macos-13" # for Intel based Macs (last version that GitHub runs on Intel)
            args: ""
          - platform: "ubuntu-20.04"
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # If on Mac, we need to include both architectures
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

        # required to run build scripts
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install MSYS2 (Windows Only)
        if: matrix.platform == 'windows-latest'
        uses: msys2/setup-msys2@v2

      - name: Install Dependencies (Windows Only)
        if: matrix.platform == 'windows-latest'
        shell: msys2 {0}
        run: |
          pacman -Syu --noconfirm
          pacman -Su --noconfirm
          pacman -S --noconfirm autoconf automake git gzip make mingw-w64-i686-gcc mingw-w64-i686-cmake mingw-w64-i686-libtool patch tar xz

          cd ~
          curl -L http://www.fftw.org/fftw-3.3.7.tar.gz | tar xvz
          cd fftw-3.3.7
          ./configure --enable-float --enable-sse2 --with-our-malloc && make && make install

          cd ~
          git clone https://github.com/xiph/libao.git
          cd libao
          ./autogen.sh
          LDFLAGS=-lksuser ./configure && make && make install

          cd ~
          git clone https://github.com/libusb/libusb.git
          cd libusb
          ./autogen.sh
          make && make install

          cd ~
          git clone https://github.com/osmocom/rtl-sdr.git
          mkdir rtl-sdr/build && cd rtl-sdr/build
          cmake -G "MSYS Makefiles" -D LIBUSB_FOUND=1 -D LIBUSB_INCLUDE_DIR=/mingw32/include/libusb-1.0 -D "LIBUSB_LIBRARIES=-L/mingw32/lib -lusb-1.0" -D THREADS_PTHREADS_WIN32_LIBRARY=/mingw32/i686-w64-mingw32/lib/libpthread.a -D THREADS_PTHREADS_INCLUDE_DIR=/mingw32/i686-w64-mingw32/include -D CMAKE_INSTALL_PREFIX=/mingw32 ..
          make && make install

      - name: Install Dependencies (Ubuntu Only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev librsvg2-dev patchelf
          sudo apt-get install -y git build-essential cmake autoconf libtool libao-dev libfftw3-dev librtlsdr-dev

      - name: Install Dependencies (MacOS Only)
        if: matrix.platform == 'macos-latest' || matrix.platform == 'macos-13'
        run: |
          brew install cmake autoconf automake libtool git librtlsdr libao fftw

      - name: install frontend dependencies
        run: yarn install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "RTL-SDR Radio v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
